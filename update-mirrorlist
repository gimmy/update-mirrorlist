#!/usr/bin/env bash

VERSION='1.0.9'
PROTOCOL=('http' 'https')
IPV=(4)
USE_STATUS=true
MAX=0
COUNTRIES=()
PACSERVE=''
MIRRORLIST='/etc/pacman.d/mirrorlist'
PACSAVE='/etc/pacman.d/mirrorlist.original'

. /etc/pacman.d/update-mirrorlist.conf

if [ $COLOR ]; then
  # colors:
  WHITE="\033[38;1m"
  GREEN="\033[32;1m"
  BLUE="\033[34;1m"
  RED="\033[31;1m"
  CLOSE="\033[0m"

  # prefixes:
  WORK="${BLUE}::${CLOSE}"
  INFO="${GREEN} >${CLOSE}"
  ARROW="${BLUE}->${CLOSE}"
  ERROR="${RED} >${CLOSE}"
fi

# log <msg> [<is_error>]
log() {
  if [ $COLOR ]; then
    if [ $2 ]; then
      printf "${ERROR} ${WHITE}%s${CLOSE}\n" "${1}"
    else
      printf "${WORK} ${WHITE}%s${CLOSE}\n" "${1}"
    fi
  else
    printf '%s\n' "${1}"
  fi

  printf '[%s] %s' "$(date +'%Y-%m-%d %H:%M')" "${1}" | logger
}

# error <msg>
error() {
  log "${1}" 1
}

# test_root
test_root() {
  if [ $EUID -ne 0 ]; then
    error 'Only root can update the mirrorlist'
    exit 1
  fi
}

# usage
usage() {
  cat <<EOF
Usage: ${0} [options]

Update options:
  -m <num>   Set max number of mirrors

Other options:
  -h  Show this help
  -v  Show version and exit
  -r  Restore original mirrorlist
  -c  Check mirrorlist for errors

update-mirrorlist updates the pacman mirrorlist by retrieving
a fresh list from http://www.archlinux.org/mirrorlist/

See /etc/pacman.d/update-mirrorlist.conf for configuration
EOF
}

# check <file>
check() {
  # Test for invalid lines
  egrep -v '^#|^[[:blank:]]*$|^Server = (http|https)://' "$1" &>/dev/null
  [[ $? -eq 0 ]] && return 0

  # Check if there is at least one mirror
  egrep '^Server = (http|https)://' "$1" &>/dev/null
  [[ $? -ne 0 ]] && return 0

  return 1
}

# restore
restore() {
  log 'Restoring original mirrorlist'

  if [ ! -f "${PACSAVE}" ]; then
    log "File does not exist: ${PACSAVE}"
    exit 1
  fi

  check "${PACSAVE}"

  if [ $? -ne 1 ]; then
    log 'Original mirrorlist seems to be corrupted.'
    exit 1
  fi

  mv "${PACSAVE}" "${MIRRORLIST}"
  log 'Restored original mirrorlist'
  exit 0
}

# check_curlist
check_curlist() {
  check "${MIRRORLIST}"

  if [ $? -ne 0 ]; then
    log 'No errors found.'
  else
    cat << EOF
WARNING: The mirrorlist seems to be corrupted!

Try:
  ${0}     to retrieve a new list from the server
  ${0} -r  to restore the original mirrorlist
EOF
  fi

  exit 0
}

# set_max <num>
set_max() {
  if ! [[ "$1" =~ ^[0-9]+$ ]]; then
    printf 'Given value is not a number: %s\n' "${1}"
    exit 1
  fi

  MAX=$1
}

while getopts 'm:ovhrc' opt; do
  case ${opt} in
    m) set_max $OPTARG;;
    v) printf 'update-mirrorlist, version %s\n' "${VERSION}"; exit 0;;
    r) test_root; restore;;
    c) check_curlist;;
    *) usage; exit 0;;
  esac
done

test_root
uri='https://www.archlinux.org/mirrorlist/?'

if $USE_STATUS; then
  uri+='use_mirror_status=on&'
fi

for x in "${PROTOCOL[@]}"; do
  uri+="protocol=${x}&"
done

for x in "${IPV[@]}"; do
  uri+="ip_version=${x}&"
done

for x in "${COUNTRIES[@]}"; do
  uri+="country=${x}&"
done

if [ ! -e "${PACSAVE}" ]; then
  log 'Backing up original mirrorlist'
  cp "${MIRRORLIST}" "${PACSAVE}"
fi

log 'Updating mirrorlist'

tmpfile=$(mktemp --tmpdir mirrorlist-XXXXXXXXXXXX)

if [ ! "`ping -c 1 archlinux.org`" ]; then
  error 'Error: Could not reach host: archlinux.org'
  exit 1
fi

curl -s "$uri" | sed 's/^#Server/Server/g' > "$tmpfile"
check "$tmpfile"

if [ $? -ne 1 ]; then
  error 'Retrieved mirrorlist seems to be corrupted.'
  exit 1
fi

if [ $MAX -gt 0 ]; then
  egrep -m $MAX '^Server = (http|https)://' "$tmpfile" > "${MIRRORLIST}"
else
  mv "$tmpfile" "${MIRRORLIST}"
fi

if [ -n "${PACSERVE}" -a -f /usr/bin/pacserve ]; then
  sed "1 i## Pacserve repository\nServer=${PACSERVE}\n" -i "${MIRRORLIST}"
fi

chmod 644 "${MIRRORLIST}"
log 'Updated mirrorlist'

exit 0
